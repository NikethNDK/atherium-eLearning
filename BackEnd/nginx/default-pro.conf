# /nginx/default.conf
server {
    listen 80;
    server_name api.aetherium.wiki;

    client_max_body_size 100M;
    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.aetherium.wiki;

    # SSL certificates (use Let's Encrypt or your certs)
    ssl_certificate /etc/letsencrypt/live/api.aetherium.wiki/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.aetherium.wiki/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Proxy for FastAPI HTTP requests
    location / {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;



        # if ($request_method = OPTIONS) {
        #     add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        #     add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     add_header 'Content-Length' 0;
        #     add_header 'Content-Type' text/plain;
        #     return 204;
        # }

    }

    # Proxy for WebSocket connections
    location /ws {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        proxy_buffering off;
        proxy_cache off;
        
        # Keep connection alive
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
        
        # Handle WebSocket close properly
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
    }

    # Serve static files (uploads)
    location /uploads/ {
        alias /Backend/uploads/;
        autoindex off;
    }

    # Optional: increase buffer sizes for large requests/files
    client_max_body_size 100M;
}
